# Most up to date files can be found here:
# https://github.com/ROG-solutions/Positron/edit/main/Positron/cfg/PIS.cfg
  
  #To use, in "includes.cfg" uncomment "[include PIS.cfg]" then run the macro "pre resonance testing"
  #then connect the portable input shaper using the cable. then run the macro "good vibes only"
  #To reset for printing is the reverse of the procedure, make sure you have the PIS MCU disconnected! Or it will damage it.
  #To measure the resonances, and to generate the graphs setup as above then run the following:
  
[gcode_macro Test_resonance] #Test resonances for graph generation
gcode:

  SET_KINEMATIC_POSITION X=100
  SET_KINEMATIC_POSITION Y=100
  SET_KINEMATIC_POSITION Z=75
  TEST_RESONANCES AXIS=X
  TEST_RESONANCES AXIS=Y
  # And then the following in the terminal (via puTTY/else)
  # ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
  # ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png

[mcu PIS]
#Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
#replace mine with your own
serial: /dev/serial/by-id/usb-Klipper_rp2040_E6625C05E7697528-if00

[adxl345]
cs_pin: PIS:gpio13
#spi_bus: spi1a
spi_software_sclk_pin: PIS:gpio10
spi_software_mosi_pin: PIS:gpio11
spi_software_miso_pin: PIS:gpio12
axes_map: x,-z,y

[resonance_tester]
#accel_chip: adxl345 usbadxl
accel_chip: adxl345
probe_points:
  100,100,75 # an example
accel_per_hz: 140
  
[gcode_macro Good_vibes_only] #calibrate the shaper, then save to config
gcode:
 
  SET_KINEMATIC_POSITION X=100
  SET_KINEMATIC_POSITION Y=100
  SET_KINEMATIC_POSITION Z=75
  SHAPER_CALIBRATE
  SAVE_CONFIG
  



