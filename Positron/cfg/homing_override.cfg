# Most up to date files can be found here:
# https://github.com/ROG-solutions/Positron/edit/main/Positron/cfg/homing_override.cfg

# Homing override, enter your own sensitivity and current values in the drop down inside the Macro area.
#Notes: 
# Higher current on steppers makes sensorless homing more reliable
# x/ysens values from 0-255, 0 being least sensitive
# Higher homing speeds make sensorless homing more reliable
# Once you have the correct figures for each axis, enter them into the below macro, as xsens and ysens respectivley

[gcode_macro _HOMING_VARIABLES]
#Set this value for stepper run current during X/Y-Axis Homing
variable_xcurrent: 1.2
variable_ycurrent: 1.2
#Set this value for stepper sensitivity during X/Y-Axis Homing
variable_xsens:    68
variable_ysens:    70
# variable_test:     100
gcode:

[gcode_macro Homing_tuning]
# variable_sgthrs: 121
gcode:
  {% set XSGTHRS = params.X_SENSITIVITY|default(255)|int %}
  SET_GCODE_VARIABLE MACRO=_HOMING_VARIABLES VARIABLE=xsens VALUE={XSGTHRS}
  {% set YSGTHRS = params.Y_SENSITIVITY|default(255)|int %}
  SET_GCODE_VARIABLE MACRO=_HOMING_VARIABLES VARIABLE=ysens VALUE={YSGTHRS}
  {% set XSGTHRS_print = printer["gcode_macro _HOMING_VARIABLES"].xsens %}
  {% set YSGTHRS_print = printer["gcode_macro _HOMING_VARIABLES"].ysens %}
  RESPOND TYPE=echo MSG="Previous Xsensitivity value: {XSGTHRS_print}"
  RESPOND TYPE=echo MSG="Current Xsensitivity value: {XSGTHRS}"
  RESPOND TYPE=echo MSG="Previous Ysensitivity value: {YSGTHRS_print}"
  RESPOND TYPE=echo MSG="Current Ysensitivity value: {YSGTHRS}"

[gcode_macro _Homing_SGTHRS_print]
gcode:
  {% set XSGTHRS_print = printer["gcode_macro _HOMING_VARIABLES"].xsens %}
  {% set YSGTHRS_print = printer["gcode_macro _HOMING_VARIABLES"].ysens %}
  RESPOND TYPE=echo MSG="Variable XSGTHRS_print= {XSGTHRS_print}"
  RESPOND TYPE=echo MSG="Variable YSGTHRS_print= {YSGTHRS_print}"

[stepper_x]
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_retract_dist: 0
position_endstop: 0
position_max: 180
homing_speed: 40

[stepper_y]
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_retract_dist: 0
position_endstop: 0
position_max: 180
homing_speed: 40

[stepper_z]
endstop_pin: probe:z_virtual_endstop
homing_retract_dist: 0
position_min: -2.5
position_max: 170
homing_speed: 5

[force_move]
 enable_force_move = true
  
[gcode_macro _FORCE_Z_UP]
gcode: 
  FORCE_MOVE STEPPER=stepper_z DISTANCE=5 VELOCITY=5

[homing_override]
gcode: 
  # {% if "xyz" in printer.toolhead.homed_axes %}
  #   RESPOND TYPE=command MSG='Axis homed'
  # {% else %}
    {% if printer.configfile.config.adxl345 %}
      RESPOND TYPE=error MSG='Check config! Is PIS connected?'
      _FLASH_ERROR
      M84
    {% else %}
      {% if not 'Z' in params and not 'Y' in params and 'X' in params %}
        _FORCE_Z_UP
        _HOMING_OVERRIDE_X
      {% elif not 'Z' in params and not 'X' in params and 'Y' in params %}
        _FORCE_Z_UP
        _HOMING_OVERRIDE_Y
      {% elif 'Z' in params and not 'X' in params and not 'Y' in params %}
        _FORCE_Z_UP
        _HOMING_OVERRIDE_Z
      {% else %}
        RESPOND TYPE=echo MSG="Axis selected: All"
        _FORCE_Z_UP
        _HOMING_OVERRIDE_X
        _HOMING_OVERRIDE_Y
        _HOMING_OVERRIDE_Z
      {% endif %}
    {% endif %}
  # {% endif %}

[gcode_macro _HOMING_OVERRIDE_X]
gcode: 
  _HOME_X_LED
  RESPOND TYPE=echo MSG="Axis selected: X"
  {% set HOME_CUR = printer["gcode_macro _HOMING_VARIABLES"].xcurrent %}
  {% set HOME_SENS_X_AXIS = printer["gcode_macro _HOMING_VARIABLES"].xsens %}
  RESPOND TYPE=echo MSG="Temporary set X homing current to: {HOME_CUR}"
  RESPOND TYPE=echo MSG="Temporary set X homing sensitivity to: {HOME_SENS_X_AXIS}"
  # Retrieve used setting for stepper current and save them
  {% set RUN_CUR_X_STEPPER = printer.configfile.settings['tmc2209 stepper_x'].run_current %}
  {% set RUN_SENS_X_STEPPER = printer.configfile.settings['tmc2209 stepper_x'].driver_sgthrs %}
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
  # Pause to ensure driver stall flag is clear
  G4 P500
  SET_TMC_FIELD STEPPER=stepper_x FIELD=SGTHRS VALUE={HOME_SENS_X_AXIS}
  RESPOND TYPE=echo MSG="Homing X"
  G28 X0
  G91
  G0 X5 F2400
  G4 P500
  G90
  #Return to the pre-macro values
  RESPOND TYPE=echo MSG="Reset X stepper current to: {RUN_CUR_X_STEPPER}"
  RESPOND TYPE=echo MSG="Reset X stepper sensitivity to: {RUN_SENS_X_STEPPER}"
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR_X_STEPPER}
  SET_TMC_FIELD STEPPER=stepper_x FIELD=SGTHRS VALUE={RUN_SENS_X_STEPPER}
  _RECALLLEDSTATE

[gcode_macro _HOMING_OVERRIDE_Y]
gcode: 
  _HOME_Y_LED
  RESPOND TYPE=echo MSG="Axis selected: Y"
  {% set HOME_CUR = printer["gcode_macro _HOMING_VARIABLES"].ycurrent %}
  {% set HOME_SENS_Y_AXIS = printer["gcode_macro _HOMING_VARIABLES"].ysens %}
  RESPOND TYPE=echo MSG="Temporary set Y homing current to: {HOME_CUR}"
  RESPOND TYPE=echo MSG="Temporary set Y homing sensitivity to: {HOME_SENS_Y_AXIS}"
  # Retrieve used setting for stepper current and save them
  {% set RUN_CUR_Y_STEPPER = printer.configfile.settings['tmc2209 stepper_y'].run_current %}
  {% set RUN_SENS_Y_STEPPER = printer.configfile.settings['tmc2209 stepper_y'].driver_sgthrs %}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
  # Pause to ensure driver stall flag is clear
  G4 P500
  SET_TMC_FIELD STEPPER=stepper_y FIELD=SGTHRS VALUE={HOME_SENS_Y_AXIS}
  RESPOND TYPE=echo MSG="Homing Y"
  G28 Y0
  G91
  G0 Y5 F2400
  G4 P500
  G90
  #Return to the pre-macro values
  RESPOND TYPE=echo MSG="Reset Y stepper current to: {RUN_CUR_Y_STEPPER}"
  RESPOND TYPE=echo MSG="Reset Y stepper sensitivity to: {RUN_SENS_Y_STEPPER}"
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR_Y_STEPPER}
  SET_TMC_FIELD STEPPER=stepper_y FIELD=SGTHRS VALUE={RUN_SENS_Y_STEPPER}
  _RECALLLEDSTATE

[gcode_macro _HOMING_OVERRIDE_Z]
gcode: 
  _HOME_Z_LED
  RESPOND TYPE=echo MSG="Axis selected: Z"
  {% if printer.heater_bed.temperature <0 %}
    RESPOND TYPE=error MSG="Bed not connected Z homing cancelled"
    G0 X80 Y142.50 
    _FLASH_ERROR
    SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=0
  {% elif "xy" not in printer.toolhead.homed_axes %}
    RESPOND TYPE=echo MSG="Homing X,Y first"
    _HOMING_OVERRIDE_X
    _HOMING_OVERRIDE_Y
    RESPOND TYPE=echo MSG="Homing Z"
    G90
    G0 X80 Y142.50 F2400
    G28 Z0
    G0 Z20
  {% else %} 
    RESPOND TYPE=echo MSG="Homing Z"
    G90
    G0 X80 Y142.50 F2400
    G28 Z0
    G0 Z20  
  {% endif %}
  _RECALLLEDSTATE
